/* Generated By:JavaCC: Do not edit this line. BaccoConstants.java */
package Bacco;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface BaccoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int TEXTO = 11;
  /** RegularExpression Id. */
  int TIPO_INTEGRAL = 12;
  /** RegularExpression Id. */
  int TIPO_DECIMAL = 13;
  /** RegularExpression Id. */
  int READ = 14;
  /** RegularExpression Id. */
  int PRINT = 15;
  /** RegularExpression Id. */
  int REPEAT = 16;
  /** RegularExpression Id. */
  int START = 17;
  /** RegularExpression Id. */
  int END = 18;
  /** RegularExpression Id. */
  int VAR = 19;
  /** RegularExpression Id. */
  int ENDAVAR = 20;
  /** RegularExpression Id. */
  int ATTR = 21;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 22;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 23;
  /** RegularExpression Id. */
  int ABRE_CHAVE = 24;
  /** RegularExpression Id. */
  int FECHA_CHAVE = 25;
  /** RegularExpression Id. */
  int SOMA = 26;
  /** RegularExpression Id. */
  int SUB = 27;
  /** RegularExpression Id. */
  int DIVISAO = 28;
  /** RegularExpression Id. */
  int MULTI = 29;
  /** RegularExpression Id. */
  int POTENCIA = 30;
  /** RegularExpression Id. */
  int IF = 31;
  /** RegularExpression Id. */
  int ELSE = 32;
  /** RegularExpression Id. */
  int TIPO_TEXTO = 33;
  /** RegularExpression Id. */
  int TIPO_NUMERICO = 34;
  /** RegularExpression Id. */
  int ID = 35;
  /** RegularExpression Id. */
  int MAIOR = 36;
  /** RegularExpression Id. */
  int MENOR = 37;
  /** RegularExpression Id. */
  int MAIORIGUAL = 38;
  /** RegularExpression Id. */
  int MENORIGUAL = 39;
  /** RegularExpression Id. */
  int DIFERENTE = 40;
  /** RegularExpression Id. */
  int IGUAL = 41;
  /** RegularExpression Id. */
  int AND = 42;
  /** RegularExpression Id. */
  int OR = 43;
  /** RegularExpression Id. */
  int NOT = 44;
  /** RegularExpression Id. */
  int CONCATENAR = 45;
  /** RegularExpression Id. */
  int VIRGULA = 46;
  /** RegularExpression Id. */
  int FIM_DA_LINHA = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int comentario_linha = 1;
  /** Lexical state. */
  int comentario = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"@\"",
    "\":--\"",
    "<token of kind 7>",
    "<token of kind 8>",
    "\"--:\"",
    "<token of kind 10>",
    "<TEXTO>",
    "<TIPO_INTEGRAL>",
    "<TIPO_DECIMAL>",
    "\"read\"",
    "\"print\"",
    "\"repeat\"",
    "\"Start\"",
    "\"End\"",
    "\"Var\"",
    "\"EndVar\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"^\"",
    "\"IsTrue\"",
    "\"IsNot\"",
    "\"text\"",
    "\"number\"",
    "<ID>",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"==\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"#\"",
    "\",\"",
    "\";\"",
  };

}

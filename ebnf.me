Inicio → <Start> <FIM_DA_LINHA> (corpo)+ <End> <FIM_DA_LINHA> <EOF>

corpo → (dvar)* (comandos)*

dvar → <VAR><FIM_DA_LINHA> criar_var (<VIRGULA> criar_var)* <ENDVAR> <FIM_DA_LINHA>  

declaVar →  (<TIPO_NUMERICO> | <TIPO_TEXTO> ) itemListaVar()(<VIRGULA> itemListaVar())* <FIM_DA_LINHA>

itemListaVar →  <ID> (<ATTR> exp())?

comandos → attr | cond | read | print | loop 

attr → <id> <=> (exp | read )* <FIM_DA_LINHA>

exp → expAuxiliar

expAuxiliar -> termo

termo -> termo1 (or termo1)*

termo1 -> termo2 (and termo2)*

termo2 -> termo3 ((<MAIOR> | <MENOR> | <MAIORIGUAL> | <MENORIGUAL> | <DIFERENTE> | <IGUAL> ) termo3)*

termo3 -> termo4 (<SOMA> termo5 | <SUB> termo4 )*

termo4 -> termo5 (<MULTI> termo5 | <DIVISAO> termo5 )*

termo5 -> termo6 (<POTENCIA> termo6 )*

termo6 -> (NOT)* termo7

termo6 -> (<CONCATENAR>)* termo8

termo8 -> (<MENOS> |<MAIS>)? <NUMEROS>	|	 <VARIAVEIS>	| 	 <TIPO_TEXTO>	| 	 <ABRE_PARENTESES> expAuxiliar <FECHA_PARENTESES>

IsTrue → <IF> <ABRE_PARENTESES> exp <FECHA_PARENTESES> <ABRE_CHAVE>(comandos)* <FECHA_CHAVE>(IsNot)?

IsNot → <ELSE> <ABRE_CHAVE>(comandos)*<FECHA_CHAVE>

read → <ID> <ATTR> <READ> <ABRE_PARENTESES> corpoEntrada <FECHA_PARENTESES>

corpoEntrada -> (<TEXTO>)?

print → <PRINT> <ABRE_PARENTESES> corpoMostra <FECHA_PARENTESES> <FIM_DA_LINHA>

corpoMostra → <TEXTO> <CONCATENAR> exp

repeat → <REPEAT> <ABRE_PARENTESES>exp<FECHA_PARENTESES> <ABRE_CHAVE>(comandos)*<FECHA_CHAVE>